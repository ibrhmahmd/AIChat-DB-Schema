// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ollama_API_Teting.DataAccessLayer;

#nullable disable

namespace Ollama_API_Teting.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240912151812_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LanguageModelModelCategory", b =>
                {
                    b.Property<int>("CategoriesCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ModelsModelId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesCategoryId", "ModelsModelId");

                    b.HasIndex("ModelsModelId");

                    b.ToTable("LanguageModelModelCategory");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.AIResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alternatives")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChatSessionSessionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFinal")
                        .HasColumnType("bit");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ResponseText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<double>("TokenRate")
                        .HasColumnType("float");

                    b.Property<long>("Tokens")
                        .HasColumnType("bigint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChatSessionSessionId");

                    b.HasIndex("UserId");

                    b.ToTable("AIResponses");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.AnalyticsLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EventDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AnalyticsLogs");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.ChatMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatSessionSessionId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("RelevanceScore")
                        .HasColumnType("real");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("VectorRepresentation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChatSessionSessionId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.ChatSession", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastActivityTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxTokens")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TokenUsage")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SessionId");

                    b.HasIndex("ModelId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatSessions");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AIResponseId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AIResponseId");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.LanguageModel", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModelId"));

                    b.Property<double>("Accuracy")
                        .HasColumnType("float");

                    b.Property<double>("CostPerToken")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCustomizable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsQuantized")
                        .HasColumnType("bit");

                    b.Property<string>("LanguagesSupported")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxTokens")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("Parameters")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ReleasedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrainingData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ModelId");

                    b.HasIndex("UserId");

                    b.ToTable("LanguageModels");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.ModelCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("ModelCategories");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.Prompt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatSessionSessionId")
                        .HasColumnType("int");

                    b.Property<string>("Context")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageModel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaxTokens")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserInput")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChatSessionSessionId");

                    b.HasIndex("UserId");

                    b.ToTable("Prompts");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.RateLimitLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RateLimitLogs");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LanguageModelModelCategory", b =>
                {
                    b.HasOne("Ollama_API_Teting.DataAccessLayer.ModelCategory", null)
                        .WithMany()
                        .HasForeignKey("CategoriesCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ollama_API_Teting.DataAccessLayer.LanguageModel", null)
                        .WithMany()
                        .HasForeignKey("ModelsModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.AIResponse", b =>
                {
                    b.HasOne("Ollama_API_Teting.DataAccessLayer.ChatSession", "ChatSession")
                        .WithMany()
                        .HasForeignKey("ChatSessionSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ollama_API_Teting.DataAccessLayer.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatSession");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.AnalyticsLog", b =>
                {
                    b.HasOne("Ollama_API_Teting.DataAccessLayer.User", "User")
                        .WithMany("AnalyticsLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.ChatMessage", b =>
                {
                    b.HasOne("Ollama_API_Teting.DataAccessLayer.ChatSession", "ChatSession")
                        .WithMany("Messages")
                        .HasForeignKey("ChatSessionSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatSession");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.ChatSession", b =>
                {
                    b.HasOne("Ollama_API_Teting.DataAccessLayer.LanguageModel", "ModelUsed")
                        .WithMany("ChatSessions")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ollama_API_Teting.DataAccessLayer.User", "User")
                        .WithMany("ChatSessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModelUsed");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.Feedback", b =>
                {
                    b.HasOne("Ollama_API_Teting.DataAccessLayer.AIResponse", "AIResponse")
                        .WithMany("Feedbacks")
                        .HasForeignKey("AIResponseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ollama_API_Teting.DataAccessLayer.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AIResponse");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.LanguageModel", b =>
                {
                    b.HasOne("Ollama_API_Teting.DataAccessLayer.User", null)
                        .WithMany("Models")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.Prompt", b =>
                {
                    b.HasOne("Ollama_API_Teting.DataAccessLayer.ChatSession", "ChatSession")
                        .WithMany("Prompts")
                        .HasForeignKey("ChatSessionSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ollama_API_Teting.DataAccessLayer.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatSession");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.RateLimitLog", b =>
                {
                    b.HasOne("Ollama_API_Teting.DataAccessLayer.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.AIResponse", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.ChatSession", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Prompts");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.LanguageModel", b =>
                {
                    b.Navigation("ChatSessions");
                });

            modelBuilder.Entity("Ollama_API_Teting.DataAccessLayer.User", b =>
                {
                    b.Navigation("AnalyticsLogs");

                    b.Navigation("ChatSessions");

                    b.Navigation("Feedbacks");

                    b.Navigation("Models");
                });
#pragma warning restore 612, 618
        }
    }
}
